/*This will output a user's payment/deposit history
  Note: To run this program, you also need to use the 'Deposit' Class
*/

package com.mycompany.finalbank;

import java.util.Scanner;
import java.util.List;
import java.util.Random;

public class FinancialHistory extends Deposit {

    private String name;
    private String address;
    private String phoneNumber;
    private int[] SSN = new int[9];
    private StringBuilder stringSSN = new StringBuilder();
    private StringBuilder stringPhoneNumber = new StringBuilder();
    private int creditScore = 625;

    private int missedPayments;
    private double totalCreditLimit;
    private double currentDebt;
    private int years;
    private int creditInquiries;
    private boolean hasLoan;

    private Scanner keyboard = new Scanner(System.in);
    private Random rand = new Random();

    public void setUserInformation() {
        System.out.println("Enter your name: ");
        name = keyboard.nextLine();

        System.out.println("Enter your phone number (numbers only): ");
        phoneNumber = keyboard.nextLine();
        formatPhoneNumber();

        System.out.println("Enter your address: ");
        address = keyboard.nextLine();

        generateSSN();
    }

    private void generateSSN() {
        for (int i = 0; i < SSN.length; i++) {
            SSN[i] = rand.nextInt(10);
        }

        for (int i = 0; i < SSN.length; i++) {
            stringSSN.append(SSN[i]);
            if (i == 2 || i == 4) {
                stringSSN.append("-");
            }
        }
    }

    private void formatPhoneNumber() {
        for (int i = 0; i < phoneNumber.length(); i++) {
            stringPhoneNumber.append(phoneNumber.charAt(i));
            if (i == 2 || i == 5) {
                stringPhoneNumber.append("-");
            }
        }
    }

    public void setCreditAttributes() {
        System.out.print("Missed payments: ");
        missedPayments = keyboard.nextInt();

        System.out.print("Total Credit Limit: ");
        totalCreditLimit = keyboard.nextDouble();

        System.out.print("Current Debt: ");
        currentDebt = keyboard.nextDouble();

        System.out.print("Years of Credit History: ");
        years = keyboard.nextInt();

        System.out.print("Credit Inquiries: ");
        creditInquiries = keyboard.nextInt();

        System.out.print("Do you currently have any loans? (yes/no): ");
        hasLoan = keyboard.next().equalsIgnoreCase("yes");
    }

    public int calculateCreditScore() {
        creditScore -= missedPayments * 10;

        if (totalCreditLimit > 0) {
            double utilization = currentDebt / totalCreditLimit;

            if (utilization < 0.1)
                creditScore += 30;
            else if (utilization < 0.3)
                creditScore += 20;
            else if (utilization < 0.5)
                creditScore += 10;
            else
                creditScore -= 20;
        }

        creditScore += Math.min(years * 2, 30);
        creditScore -= creditInquiries * 5;

        if (hasLoan)
            creditScore += 20;

        return Math.max(300, Math.min(850, creditScore));
    }

    public void printUserInformation(Accounts user) {
        System.out.println("\n--- User Financial History ---");
        System.out.println("Name: " + name);
        System.out.println("Phone Number: " + stringPhoneNumber.toString());
        System.out.println("Address: " + address);
        System.out.println("SSN: " + stringSSN.toString());

        System.out.println("\n--- Deposit History ---");
        List<Double> deposits = getDepositHistory();
        List<String> dates = getDepositDates();

        for (int i = 0; i < deposits.size(); i++) {
            System.out.printf(" - $%.2f on %s\n", deposits.get(i), dates.get(i));
        }

        System.out.printf("Current Balance (from account): $%.2f\n", user.getBalance());
    }
}
